// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/openbank/openbank/v1/atm/all.proto

package atm

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	types "github.com/openbank/openbank/v1/types"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ATM holds all details about an ATM.
type ATM struct {
	// ID is the unique identifier of an ATM.
	ID string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"ID,omitempty"`
	// BankID is the identifier of the bank associated with the ATM.
	BankID string `protobuf:"bytes,2,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// Name is the name of ATM.
	Name string `protobuf:"bytes,3,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	// Address is the ATM's address.
	Address *types.Address `protobuf:"bytes,4,opt,name=Address,json=address,proto3" json:"Address,omitempty"`
	// Location is the ATM longitude and latitude.
	Location *types.Location `protobuf:"bytes,5,opt,name=Location,json=location,proto3" json:"Location,omitempty"`
	// Description is the ATM's description.
	Description string `protobuf:"bytes,6,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	// Metadata is the ATM's metadata.
	Metadata             string   `protobuf:"bytes,7,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ATM) Reset()         { *m = ATM{} }
func (m *ATM) String() string { return proto.CompactTextString(m) }
func (*ATM) ProtoMessage()    {}
func (*ATM) Descriptor() ([]byte, []int) {
	return fileDescriptor_80fee59d76a66276, []int{0}
}

func (m *ATM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ATM.Unmarshal(m, b)
}
func (m *ATM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ATM.Marshal(b, m, deterministic)
}
func (m *ATM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ATM.Merge(m, src)
}
func (m *ATM) XXX_Size() int {
	return xxx_messageInfo_ATM.Size(m)
}
func (m *ATM) XXX_DiscardUnknown() {
	xxx_messageInfo_ATM.DiscardUnknown(m)
}

var xxx_messageInfo_ATM proto.InternalMessageInfo

func (m *ATM) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ATM) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *ATM) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ATM) GetAddress() *types.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *ATM) GetLocation() *types.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *ATM) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ATM) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

// CreateATMRequest is a request to create an ATM.
type CreateATMRequest struct {
	// BankID is the bank identifier that owned the ATM
	BankID string `protobuf:"bytes,1,opt,name=BankID,json=bank_id,proto3" json:"BankID,omitempty"`
	// BankID is the identifier of the bank associated with the ATM.
	Name string `protobuf:"bytes,2,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	// Address is the ATM's address.
	Address *types.Address `protobuf:"bytes,3,opt,name=Address,json=3,proto3" json:"Address,omitempty"`
	// Location is the ATM's longitude and latitude
	Location *types.Location `protobuf:"bytes,4,opt,name=Location,json=location,proto3" json:"Location,omitempty"`
	// Description is the ATM's description.
	Description string `protobuf:"bytes,5,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	// Metadata is the ATM's metadata.
	Metadata             string   `protobuf:"bytes,6,opt,name=Metadata,json=metadata,proto3" json:"Metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateATMRequest) Reset()         { *m = CreateATMRequest{} }
func (m *CreateATMRequest) String() string { return proto.CompactTextString(m) }
func (*CreateATMRequest) ProtoMessage()    {}
func (*CreateATMRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_80fee59d76a66276, []int{1}
}

func (m *CreateATMRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateATMRequest.Unmarshal(m, b)
}
func (m *CreateATMRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateATMRequest.Marshal(b, m, deterministic)
}
func (m *CreateATMRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateATMRequest.Merge(m, src)
}
func (m *CreateATMRequest) XXX_Size() int {
	return xxx_messageInfo_CreateATMRequest.Size(m)
}
func (m *CreateATMRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateATMRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateATMRequest proto.InternalMessageInfo

func (m *CreateATMRequest) GetBankID() string {
	if m != nil {
		return m.BankID
	}
	return ""
}

func (m *CreateATMRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateATMRequest) GetAddress() *types.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *CreateATMRequest) GetLocation() *types.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CreateATMRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateATMRequest) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

// CreateATMResponse is the response envelope for creating an ATM.
type CreateATMResponse struct {
	// ATM_ID is the unique identifier of the ATM.
	ATM_ID               string   `protobuf:"bytes,1,opt,name=ATM_ID,json=atm_id,proto3" json:"ATM_ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateATMResponse) Reset()         { *m = CreateATMResponse{} }
func (m *CreateATMResponse) String() string { return proto.CompactTextString(m) }
func (*CreateATMResponse) ProtoMessage()    {}
func (*CreateATMResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80fee59d76a66276, []int{2}
}

func (m *CreateATMResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateATMResponse.Unmarshal(m, b)
}
func (m *CreateATMResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateATMResponse.Marshal(b, m, deterministic)
}
func (m *CreateATMResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateATMResponse.Merge(m, src)
}
func (m *CreateATMResponse) XXX_Size() int {
	return xxx_messageInfo_CreateATMResponse.Size(m)
}
func (m *CreateATMResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateATMResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateATMResponse proto.InternalMessageInfo

func (m *CreateATMResponse) GetATM_ID() string {
	if m != nil {
		return m.ATM_ID
	}
	return ""
}

// GetATMRequest is the request envelope for retrieving a specific ATM's information.
type GetATMRequest struct {
	// ATM_ID is a unique identifier of the ATM.
	ATM_ID               string   `protobuf:"bytes,1,opt,name=ATM_ID,json=atm_id,proto3" json:"ATM_ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetATMRequest) Reset()         { *m = GetATMRequest{} }
func (m *GetATMRequest) String() string { return proto.CompactTextString(m) }
func (*GetATMRequest) ProtoMessage()    {}
func (*GetATMRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_80fee59d76a66276, []int{3}
}

func (m *GetATMRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetATMRequest.Unmarshal(m, b)
}
func (m *GetATMRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetATMRequest.Marshal(b, m, deterministic)
}
func (m *GetATMRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetATMRequest.Merge(m, src)
}
func (m *GetATMRequest) XXX_Size() int {
	return xxx_messageInfo_GetATMRequest.Size(m)
}
func (m *GetATMRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetATMRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetATMRequest proto.InternalMessageInfo

func (m *GetATMRequest) GetATM_ID() string {
	if m != nil {
		return m.ATM_ID
	}
	return ""
}

// GetATMsResponse is the response envelope for retrieving ATM information.
type GetATMsResponse struct {
	// Result is the list of the ATMs.
	Result               []*ATM   `protobuf:"bytes,1,rep,name=Result,json=result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetATMsResponse) Reset()         { *m = GetATMsResponse{} }
func (m *GetATMsResponse) String() string { return proto.CompactTextString(m) }
func (*GetATMsResponse) ProtoMessage()    {}
func (*GetATMsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_80fee59d76a66276, []int{4}
}

func (m *GetATMsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetATMsResponse.Unmarshal(m, b)
}
func (m *GetATMsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetATMsResponse.Marshal(b, m, deterministic)
}
func (m *GetATMsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetATMsResponse.Merge(m, src)
}
func (m *GetATMsResponse) XXX_Size() int {
	return xxx_messageInfo_GetATMsResponse.Size(m)
}
func (m *GetATMsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetATMsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetATMsResponse proto.InternalMessageInfo

func (m *GetATMsResponse) GetResult() []*ATM {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*ATM)(nil), "atm.ATM")
	proto.RegisterType((*CreateATMRequest)(nil), "atm.CreateATMRequest")
	proto.RegisterType((*CreateATMResponse)(nil), "atm.CreateATMResponse")
	proto.RegisterType((*GetATMRequest)(nil), "atm.GetATMRequest")
	proto.RegisterType((*GetATMsResponse)(nil), "atm.GetATMsResponse")
}

func init() {
	proto.RegisterFile("github.com/openbank/openbank/v1/atm/all.proto", fileDescriptor_80fee59d76a66276)
}

var fileDescriptor_80fee59d76a66276 = []byte{
	// 1269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x96, 0x41, 0x6f, 0x1b, 0x45,
	0x14, 0xc7, 0x77, 0xd7, 0xa9, 0xe3, 0x4e, 0x14, 0xd2, 0x0e, 0xa5, 0xb2, 0xdc, 0x52, 0x06, 0xb7,
	0x94, 0x10, 0x92, 0xb5, 0xe3, 0x16, 0x15, 0x05, 0xa1, 0x6a, 0xd3, 0xb4, 0x25, 0xa1, 0x86, 0xc8,
	0x58, 0x15, 0xea, 0x25, 0x1a, 0xef, 0x3e, 0xdb, 0x43, 0x76, 0x67, 0x96, 0x99, 0xd9, 0xa4, 0x01,
	0x55, 0xaa, 0x38, 0x54, 0xed, 0xad, 0x0a, 0x37, 0x0e, 0x1c, 0xe0, 0xc4, 0x99, 0x0b, 0x07, 0x3e,
	0x04, 0x12, 0x12, 0x82, 0x13, 0x17, 0x2e, 0x7c, 0x03, 0x24, 0x2e, 0x68, 0x76, 0xd7, 0x76, 0x1c,
	0xb7, 0xa4, 0x85, 0x53, 0xe2, 0x99, 0xf7, 0xfe, 0xf3, 0xe6, 0xf7, 0xfe, 0xf3, 0x6c, 0xb4, 0xd4,
	0x63, 0xba, 0x9f, 0x74, 0x5c, 0x5f, 0x44, 0x35, 0x11, 0x03, 0xef, 0x50, 0xbe, 0x3d, 0xfa, 0x67,
	0x67, 0xb9, 0x46, 0x75, 0x54, 0xa3, 0x61, 0xe8, 0xc6, 0x52, 0x68, 0x81, 0x0b, 0x54, 0x47, 0x95,
	0xb3, 0x3d, 0x21, 0x7a, 0x21, 0xd4, 0x68, 0xcc, 0x6a, 0x94, 0x73, 0xa1, 0xa9, 0x66, 0x82, 0xab,
	0x2c, 0xa4, 0xb2, 0x98, 0xfe, 0xf1, 0x97, 0x7a, 0xc0, 0x97, 0xd4, 0x2e, 0xed, 0xf5, 0x40, 0xd6,
	0x44, 0x9c, 0x46, 0x3c, 0x21, 0xfa, 0x4c, 0xae, 0x95, 0x7e, 0xea, 0x24, 0xdd, 0x1a, 0x44, 0xb1,
	0xde, 0xcb, 0x37, 0x6b, 0x47, 0x15, 0xa7, 0xf7, 0x62, 0x50, 0xa3, 0xf2, 0xaa, 0xdf, 0x3b, 0xa8,
	0xe0, 0xb5, 0x9b, 0xb8, 0x82, 0x9c, 0xf5, 0xb5, 0xb2, 0x4d, 0xec, 0xf9, 0xe3, 0xab, 0xa8, 0x64,
	0x95, 0xad, 0x79, 0xab, 0x6e, 0x6d, 0x5a, 0x2d, 0x87, 0x05, 0xf8, 0x3c, 0x2a, 0xae, 0x52, 0xbe,
	0xbd, 0xbe, 0x56, 0x76, 0x26, 0xf6, 0xa7, 0x8d, 0xf0, 0x16, 0x0b, 0xf0, 0x39, 0x34, 0xf5, 0x01,
	0x8d, 0xa0, 0x5c, 0x98, 0x08, 0x99, 0xe2, 0x34, 0x02, 0x7c, 0x19, 0x4d, 0x7b, 0x41, 0x20, 0x41,
	0xa9, 0xf2, 0x14, 0xb1, 0xe7, 0x67, 0x1a, 0x2f, 0xb8, 0x69, 0x2d, 0x6e, 0xbe, 0x3a, 0xae, 0x4a,
	0xb3, 0x45, 0x7c, 0x05, 0x95, 0x6e, 0x09, 0x3f, 0xbd, 0x7f, 0xf9, 0x58, 0x9a, 0x36, 0x97, 0xa7,
	0x0d, 0x96, 0xc7, 0xf2, 0x4a, 0x61, 0xbe, 0x8a, 0x17, 0xd1, 0xcc, 0x1a, 0x28, 0x5f, 0xb2, 0x94,
	0x63, 0xb9, 0x38, 0x51, 0xd5, 0x4c, 0x30, 0xda, 0xc6, 0x17, 0x51, 0xa9, 0x09, 0x9a, 0x06, 0x54,
	0xd3, 0xf2, 0xf4, 0x44, 0x68, 0x29, 0xca, 0xf7, 0x56, 0x8a, 0x25, 0xeb, 0x84, 0x55, 0xb6, 0xaa,
	0x5f, 0x3b, 0xe8, 0xc4, 0x35, 0x09, 0x54, 0x83, 0xd7, 0x6e, 0xb6, 0xe0, 0xd3, 0x04, 0x94, 0x3e,
	0x80, 0xc9, 0x3e, 0x1a, 0x93, 0xf3, 0x14, 0x4c, 0xee, 0x08, 0x53, 0xe1, 0x48, 0x4c, 0xf6, 0xa5,
	0x31, 0x40, 0x53, 0xff, 0x03, 0xd0, 0xb1, 0x67, 0x07, 0x54, 0x7c, 0x06, 0x40, 0x57, 0xd1, 0xc9,
	0x03, 0x7c, 0x54, 0x2c, 0xb8, 0x02, 0x5c, 0x45, 0x45, 0xaf, 0xdd, 0xdc, 0x7a, 0x22, 0xa0, 0x22,
	0xd5, 0xd1, 0x16, 0x0b, 0x86, 0x02, 0xef, 0xa0, 0xd9, 0x9b, 0xa0, 0x0f, 0xd0, 0x7d, 0x9e, 0xe4,
	0x9b, 0x68, 0x2e, 0x4b, 0x56, 0xc3, 0xb3, 0x17, 0x51, 0xb1, 0x05, 0x2a, 0x09, 0x75, 0xd9, 0x26,
	0x85, 0xf9, 0x99, 0x46, 0xc9, 0xa5, 0x3a, 0x72, 0xbd, 0x76, 0x73, 0x5c, 0x48, 0xa6, 0x31, 0x03,
	0xa1, 0xc6, 0x9f, 0xd3, 0x08, 0x79, 0xed, 0xe6, 0x47, 0x20, 0x77, 0x98, 0x0f, 0xf8, 0x17, 0x07,
	0x15, 0x33, 0x61, 0x8c, 0xd3, 0xfc, 0xb1, 0x12, 0x2b, 0x43, 0xcd, 0xea, 0x77, 0xce, 0xbe, 0xf7,
	0x20, 0x7f, 0x59, 0x73, 0x2d, 0xd0, 0x92, 0xc1, 0x0e, 0x10, 0xca, 0x89, 0xd7, 0x6e, 0x56, 0x6e,
	0x0d, 0x16, 0x14, 0x61, 0xbc, 0x2b, 0x64, 0x94, 0x36, 0x84, 0x48, 0xe8, 0x51, 0x19, 0x30, 0xde,
	0x23, 0x94, 0xa8, 0x18, 0x7c, 0xd6, 0x65, 0xbe, 0x89, 0x5f, 0x24, 0x0a, 0x42, 0xf0, 0x35, 0x04,
	0xa4, 0xb3, 0x47, 0x74, 0x1f, 0x88, 0x4a, 0xe2, 0x38, 0x64, 0x10, 0x90, 0xf5, 0x35, 0x77, 0xc3,
	0x43, 0x85, 0x46, 0xbd, 0x8e, 0x57, 0xd0, 0xb9, 0xbc, 0x0c, 0x02, 0x77, 0xc1, 0x4f, 0x4c, 0xb8,
	0x4a, 0x7c, 0x1f, 0x94, 0xea, 0x26, 0x61, 0xb8, 0xe7, 0xe2, 0x32, 0x3a, 0x5d, 0x39, 0x75, 0xbe,
	0x16, 0x40, 0x97, 0x71, 0x96, 0x0f, 0x17, 0x1d, 0x79, 0xed, 0xe6, 0xc6, 0x32, 0x2a, 0x5c, 0xae,
	0x5f, 0xc6, 0x0b, 0x68, 0xbe, 0x05, 0x3a, 0x91, 0x1c, 0x02, 0xb2, 0xdb, 0x07, 0x9e, 0x9e, 0x25,
	0x41, 0x89, 0x44, 0xfa, 0x40, 0x98, 0x22, 0x5c, 0x68, 0xd2, 0x15, 0x09, 0x0f, 0xdc, 0xce, 0x02,
	0x9a, 0x47, 0xc5, 0x0f, 0xbd, 0x44, 0xf7, 0x1b, 0xf8, 0x1c, 0x3a, 0xdb, 0xd7, 0x3a, 0x56, 0x2b,
	0xb5, 0x1a, 0x4d, 0x74, 0xdf, 0xed, 0xf0, 0x6d, 0x57, 0x0b, 0x23, 0xee, 0x4a, 0xa0, 0xc1, 0x17,
	0x3f, 0xff, 0xf1, 0xa5, 0xf3, 0x22, 0x3e, 0x99, 0x8f, 0x46, 0x55, 0xfb, 0x3c, 0xeb, 0xe3, 0xbd,
	0x87, 0x8e, 0xf5, 0xd8, 0x49, 0xc9, 0xe3, 0xdf, 0x1d, 0x34, 0x9d, 0x77, 0x0c, 0x9f, 0x76, 0xb3,
	0x01, 0xe7, 0x0e, 0x06, 0x9c, 0x7b, 0xdd, 0x0c, 0xb8, 0xca, 0xa9, 0x03, 0xc4, 0x87, 0x7d, 0xad,
	0x7e, 0xeb, 0xec, 0x7b, 0x8f, 0x72, 0xd2, 0x67, 0x46, 0xa4, 0xc3, 0x90, 0xd0, 0x1d, 0xca, 0x42,
	0xda, 0x09, 0xc1, 0x40, 0x54, 0x95, 0x2b, 0x47, 0x52, 0x0f, 0xc3, 0xf4, 0xc6, 0xe3, 0x79, 0xee,
	0x7f, 0xa0, 0xb3, 0xd1, 0xcc, 0x7a, 0x72, 0xe3, 0xc8, 0x9e, 0x5c, 0x40, 0xd5, 0x0a, 0x99, 0xe8,
	0xc9, 0xa1, 0x3b, 0x3e, 0x37, 0x6c, 0x84, 0x4b, 0x03, 0xd8, 0x19, 0xe3, 0xba, 0x85, 0xbf, 0x72,
	0xd0, 0xf1, 0xe1, 0x8b, 0xc4, 0x2f, 0xa5, 0x2c, 0x0f, 0x4f, 0xb0, 0xca, 0xe9, 0xc3, 0xcb, 0x39,
	0xe4, 0xdf, 0xec, 0x7d, 0xef, 0x47, 0x3b, 0x83, 0x3c, 0x9b, 0x6d, 0x0f, 0xcc, 0xfc, 0x5a, 0xf6,
	0x51, 0x11, 0x4a, 0x38, 0xec, 0x9a, 0x25, 0x42, 0x79, 0x40, 0x64, 0x8a, 0x4a, 0x11, 0xa6, 0x15,
	0x61, 0x81, 0xbb, 0xd1, 0x32, 0x44, 0x96, 0xf1, 0xfb, 0xe8, 0xd5, 0xb6, 0xa4, 0x5c, 0x51, 0x3f,
	0x85, 0xef, 0xa7, 0xb9, 0x87, 0xa1, 0x5c, 0x44, 0x17, 0x2a, 0xd5, 0x09, 0x28, 0x13, 0x55, 0x75,
	0xde, 0x44, 0x6f, 0x0c, 0xb1, 0xbc, 0x82, 0x5e, 0x7e, 0x1a, 0x96, 0x5d, 0xc9, 0x34, 0xa4, 0x5c,
	0x66, 0x57, 0xec, 0x85, 0xea, 0x21, 0x34, 0xc6, 0x7e, 0x95, 0xc2, 0x43, 0xc7, 0x5a, 0xfd, 0xa6,
	0xb8, 0xef, 0xdd, 0x2f, 0xa2, 0x42, 0xc3, 0xad, 0xe3, 0x0d, 0x34, 0x6d, 0x6e, 0xe2, 0x6d, 0xae,
	0xe3, 0xb7, 0x37, 0xa5, 0xd8, 0x61, 0x01, 0xa8, 0xbc, 0xda, 0xfc, 0x7a, 0x34, 0x20, 0x22, 0x06,
	0x99, 0x7d, 0x33, 0x13, 0x91, 0xd9, 0xc1, 0xe4, 0x0c, 0x2c, 0xe1, 0x36, 0x8e, 0x2d, 0xbb, 0x75,
	0xb7, 0xbe, 0x60, 0x3b, 0x8d, 0x13, 0xd4, 0x3c, 0xd8, 0x6c, 0xf0, 0xd6, 0x3e, 0x51, 0x82, 0xaf,
	0x4c, 0xac, 0xb4, 0x6e, 0xa0, 0xc2, 0x5b, 0xf5, 0x3a, 0xbe, 0x8a, 0xde, 0x1d, 0xb7, 0x19, 0xe5,
	0x24, 0xe1, 0x70, 0x37, 0xce, 0x26, 0x00, 0x48, 0x29, 0x24, 0x11, 0xbe, 0x9f, 0x48, 0x08, 0x06,
	0xc7, 0x2a, 0x90, 0x3b, 0x20, 0x89, 0x62, 0x01, 0xb8, 0xad, 0x2d, 0x63, 0xd7, 0x3a, 0xfe, 0x18,
	0xdd, 0x7e, 0x92, 0x5d, 0x33, 0x37, 0x76, 0x44, 0xb0, 0x67, 0x2c, 0x1b, 0xd1, 0x30, 0x7b, 0x09,
	0x46, 0x5a, 0x48, 0x12, 0x08, 0xc8, 0x7c, 0x1c, 0x51, 0xed, 0xf7, 0xd3, 0x94, 0xe1, 0xc9, 0x79,
	0xae, 0xdb, 0xba, 0x65, 0x0e, 0x58, 0xc6, 0xd7, 0xd1, 0xb5, 0xa7, 0x1f, 0x30, 0x14, 0xf2, 0x05,
	0xd7, 0x94, 0x71, 0x95, 0xee, 0x26, 0x0a, 0xe4, 0xeb, 0x29, 0xc7, 0x00, 0xb8, 0x66, 0x34, 0x54,
	0x6e, 0x6b, 0xd3, 0xa8, 0x5d, 0xc2, 0xeb, 0xe8, 0xe6, 0xa4, 0x9a, 0x89, 0x1f, 0x49, 0xf5, 0xe9,
	0x0e, 0x90, 0x18, 0x64, 0xc4, 0x94, 0x32, 0xe6, 0xd1, 0x82, 0xd0, 0xd4, 0x36, 0x63, 0x2f, 0xd1,
	0x6d, 0x3d, 0xff, 0x7b, 0xbd, 0xf3, 0xc8, 0x41, 0x0f, 0x9c, 0xa1, 0x97, 0xfe, 0xb6, 0x4b, 0x05,
	0x7c, 0xcf, 0xcb, 0xb5, 0xc5, 0x58, 0x57, 0x95, 0xc9, 0x94, 0xa0, 0xb4, 0x64, 0x29, 0x15, 0x53,
	0x44, 0xa2, 0xfb, 0xe6, 0x3a, 0x7e, 0x6a, 0x65, 0x53, 0xb3, 0x72, 0x49, 0xdb, 0x0c, 0x92, 0xd1,
	0x86, 0xa9, 0x37, 0x96, 0x22, 0x55, 0xec, 0x8a, 0x30, 0x14, 0xbb, 0x59, 0xd5, 0xe6, 0x40, 0x21,
	0xd9, 0x67, 0x59, 0xc4, 0x35, 0x11, 0x00, 0xe9, 0x86, 0x62, 0xd7, 0x9d, 0x9f, 0x6a, 0x64, 0x3e,
	0x4d, 0x74, 0x7f, 0xe5, 0x78, 0xfa, 0xbb, 0x4d, 0x6c, 0x03, 0x5f, 0xa5, 0xa8, 0x7e, 0x84, 0xd1,
	0xf1, 0x5c, 0x93, 0x72, 0xda, 0x03, 0x42, 0x75, 0x44, 0xcc, 0x57, 0x32, 0x5a, 0xfa, 0xf7, 0x89,
	0x81, 0x67, 0x6f, 0x33, 0xd8, 0x1d, 0x86, 0xbf, 0x67, 0x6f, 0x5a, 0x77, 0xcc, 0x6f, 0xd6, 0xfb,
	0xb6, 0xf5, 0xd0, 0xb6, 0x1e, 0xdb, 0xd6, 0x0f, 0xb6, 0xf5, 0xab, 0x6d, 0xfd, 0x65, 0x5b, 0x3f,
	0x39, 0x56, 0xa7, 0x98, 0x0e, 0xe5, 0x4b, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x64, 0x0a,
	0xae, 0x05, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ATMServiceClient is the client API for ATMService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ATMServiceClient interface {
	// GetATM retrieves the details regarding an specific ATM.
	GetATM(ctx context.Context, in *GetATMRequest, opts ...grpc.CallOption) (*ATM, error)
	// GetATMs retrieves information regarding all the available ATMs.
	GetATMs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetATMsResponse, error)
	// CreateATM creates a new ATM and returns its id.
	CreateATM(ctx context.Context, in *CreateATMRequest, opts ...grpc.CallOption) (*CreateATMResponse, error)
}

type aTMServiceClient struct {
	cc *grpc.ClientConn
}

func NewATMServiceClient(cc *grpc.ClientConn) ATMServiceClient {
	return &aTMServiceClient{cc}
}

func (c *aTMServiceClient) GetATM(ctx context.Context, in *GetATMRequest, opts ...grpc.CallOption) (*ATM, error) {
	out := new(ATM)
	err := c.cc.Invoke(ctx, "/atm.ATMService/GetATM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aTMServiceClient) GetATMs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetATMsResponse, error) {
	out := new(GetATMsResponse)
	err := c.cc.Invoke(ctx, "/atm.ATMService/GetATMs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aTMServiceClient) CreateATM(ctx context.Context, in *CreateATMRequest, opts ...grpc.CallOption) (*CreateATMResponse, error) {
	out := new(CreateATMResponse)
	err := c.cc.Invoke(ctx, "/atm.ATMService/CreateATM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ATMServiceServer is the server API for ATMService service.
type ATMServiceServer interface {
	// GetATM retrieves the details regarding an specific ATM.
	GetATM(context.Context, *GetATMRequest) (*ATM, error)
	// GetATMs retrieves information regarding all the available ATMs.
	GetATMs(context.Context, *empty.Empty) (*GetATMsResponse, error)
	// CreateATM creates a new ATM and returns its id.
	CreateATM(context.Context, *CreateATMRequest) (*CreateATMResponse, error)
}

// UnimplementedATMServiceServer can be embedded to have forward compatible implementations.
type UnimplementedATMServiceServer struct {
}

func (*UnimplementedATMServiceServer) GetATM(ctx context.Context, req *GetATMRequest) (*ATM, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetATM not implemented")
}
func (*UnimplementedATMServiceServer) GetATMs(ctx context.Context, req *empty.Empty) (*GetATMsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetATMs not implemented")
}
func (*UnimplementedATMServiceServer) CreateATM(ctx context.Context, req *CreateATMRequest) (*CreateATMResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateATM not implemented")
}

func RegisterATMServiceServer(s *grpc.Server, srv ATMServiceServer) {
	s.RegisterService(&_ATMService_serviceDesc, srv)
}

func _ATMService_GetATM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetATMRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ATMServiceServer).GetATM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atm.ATMService/GetATM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ATMServiceServer).GetATM(ctx, req.(*GetATMRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ATMService_GetATMs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ATMServiceServer).GetATMs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atm.ATMService/GetATMs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ATMServiceServer).GetATMs(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ATMService_CreateATM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateATMRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ATMServiceServer).CreateATM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/atm.ATMService/CreateATM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ATMServiceServer).CreateATM(ctx, req.(*CreateATMRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ATMService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "atm.ATMService",
	HandlerType: (*ATMServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetATM",
			Handler:    _ATMService_GetATM_Handler,
		},
		{
			MethodName: "GetATMs",
			Handler:    _ATMService_GetATMs_Handler,
		},
		{
			MethodName: "CreateATM",
			Handler:    _ATMService_CreateATM_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/openbank/openbank/v1/atm/all.proto",
}
